#!groovy
import uk.gov.hmcts.contino.GithubAPI

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'Divorce Case Formatter Service',
        projectUrlStr: 'https://github.com/hmcts/div-case-formatter-service'
    ],
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ])
])

// @Library("Infrastructure")
@Library('Infrastructure@Add-Tests-To-Master-Pipeline')

def type = "java"
def product = "div"
def component = "cfs"

def channel = '#div-dev'

def gitHubAPI = new GithubAPI(this)

def checkLabel2(gitHubAPI, label) {
    def labels = gitHubAPI.getLabelsbyPattern(env.BRANCH_NAME, "enable_")
    echo "Branch Name: ${env.BRANCH_NAME}"
    echo "Calling getLabelsbyPattern returned: ${labels}"
    echo "Checking labels for: ${label}"
    def labelExists = labels.contains(label)
    echo "Label Exists?: ${labelExists}"
    return labelExists
}

withPipeline(type , product, component) {

    enableAksStagingDeployment()
    disableLegacyDeployment()

    after('checkout') {
        echo '${product}-${component} checked out'
    }

    before('functionalTest:aat') {
        env.test_environment = 'aat'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    // Kubernetes does not retrieve variables from the output terraform
    before('functionalTest:preview') {
        env.test_environment = 'aat'
    }

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    enableSlackNotifications(channel)

    steps.echo "Add Checks For Extra Labels To Validate GitHubAPI Cache Usage"

    steps.echo "Test Fortify Label Check"
    if (checkLabel2(gitHubAPI, "enable_fortify_scan")) {
        steps.echo "Run Fortify Scan Here"
        enableFortifyScan()

        after('fortify-scan') {
            steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
        }
    }
}
